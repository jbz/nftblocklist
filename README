JB's nftables customizations

These files are meant to be applied overtop the standard Ubuntu 22.04 install
of `nftables`.  

Functionality:

The nftables.conf file, meant for /etc/nftables.conf, sets up a relatively simple nftable firewall with some add'l functionality such as whitelisting IPs,
blocking all SSH traffic from anywhere except those whitelisted IPs, dropping
trash traffic, and permitting HTTP/HTTPS traffic through.  It also permits 
connections to a custom ZNC server running on a designated port.

Very basic block/ban is in place here.  Anyone trying to SSH spoof more than 
three times (i.e. make a connection from anywhere but a whitelist) is added to the blocklist.  Any IP that tries to make more than 10 connections within a designated period by means other than the permitted traffic above is added to the blocklist.

There are two blocklists here, because the dynamic blocklist can't handle the 'interval' flag and thus can't manage single IPs as well as ranges.  At service stop, or daily via cron, the 'nftblocklistdump' script should be run.  This script dumps the current blocklist (it's a bit more complex, see below).

The scripts meant for /usr/sbin are as follows.

nftblocklistdump:

This script (which requires the 'iprange' tool, avaiable via apt) dumps the current blocklist information via the following process.  First, it dumps the 'blocklist_dyn' set via json pp, and runs a jq query to extract just the IP addresses from that output, and sends it (destructively) to /etc/nftables.blocklist.tmp.  Next, it actually cat-appends the contents of the current blocklist file at /etc/nftables.blocklist to that temp file.  The reason it does this is that the dump process doesn't handle *ranges*, and the goal of this is to come up with an optimized blocklist that contains both singletons and ranges.  Only the blocklist_persist set (which has the 'interval' flag) can handle this.
Once it has the tmpfile ready, it runs an iprange merge and optimize, resulting in a single list which it destructively writes to /etc/nftables.blocklist.  It runs this optimize on a merge of the tmp blocklist and on a file named 'nftables.blockcidrs' which contains any manually entered list of CIDR ranges (to permit you to manually block wide CIDR blocks that haven't tripped the autoban fully).


nftblocklistload:
this takes each line of the nftables.blocklist and executes an 'nft set add' operation to add them to the appropriate blocklist_persist table. I should probably have it flush that table first to avoid conflict?  Heh.

nftstart:
A script to start nft then run nftblocklistload, which is called from the systemd service file for nftables via ExecStart=

nftstop:
A script to first dump the blocklist, then flush the rulesets for nft, which is called from the systemd service file for nftables via ExecStop=
